setwd("~/ESS_Data/Timing_of_Life")
shiny::runApp('ESS-app')
library(foreign)
runApp('ESS-app')
as.data.frame(read.spss("ESS-app/data/tol.sav"))
tol <- as.data.frame(read.spss("ESS-app/data/tol.sav"))
runApp('ESS-app')
runApp('ESS-app')
runApp('ESS-app')
runApp('ESS-app')
setwd("~/ESS_Data/Timing_of_Life")
runApp('ESS-app')
runApp('ESS-app')
library(rsconnect)
deployApp("ESS-data")
deployApp("ESS-app")
setwd("~")
tol <- as.data.frame(read.spss("ESS_Data/Timing_of_Life/ESS-app/data/tol.sav"))
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
deployApp("ESS_Data/Timing_of_Life/ESS-app")
runApp('ESS_Data/Timing_of_Life/ESS-app')
setwd("~/ESS_Data/Timing_of_Life/ESS-app")
runApp()
setwd("~/")
runApp('ESS_Data/Timing_of_Life/ESS-app')
showLogs()
deployApp("~/ESS_Data/Timing_of_Life/ESS-app")
rsconnect::showLogs()
setwd("~/")
runApp('ESS_Data/Timing_of_Life/ESS-app')
deployApp("ESS-app")
shiny::runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp()
runApp()
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
runApp('ESS_Data/Timing_of_Life/ESS-app')
shiny::runApp('ESS_Data/Course-App')
install.packages("matrixStats")
library(matrixStats)
#Import data
ess_data <- as.data.frame(read_spss("ess_data.sav"))
library(shiny)
library(fmsb)
library(expss)
library(dplyr)
library(gridExtra)
library(rsconnect)
library(matrixStats)
#Import data
ess_data <- as.data.frame(read_spss("ess_data.sav"))
setwd("~/ESS_Data/MOOC-App")
#Import data
ess_data <- as.data.frame(read_spss("ess_data.sav"))
weightedMedian(ess_data$agea, ess_data$dweight)
spatstat::weighted.median()
library(spatstat)
weighted.median()
weighted.median(ess_data$agea, ess_data$dweight)
median(ess_data$agea)
median(ess_data$agea)
ess_data$agea
?median
median(ess_data$agea, na.rm = T)
View(ess_data)
{dummy_data <- data.frame(list("Trust1" = round(runif(5, 0, 10),0),
"Trust2" = round(runif(5, 0, 10),0),
"Trust3" = round(runif(5, 0, 10),0),
"Trust4" = round(runif(5, 0, 10),0),
"Immigration1" = round(runif(5, 0, 10),0),
"Immigration2" = round(runif(5, 0, 10),0),
"Immigration3" = round(runif(5, 0, 10),0),
"Immigration4" = round(runif(5, 0, 10),0),
"Satisfaction1" = round(runif(5, 0, 10),0),
"Satisfaction2" = round(runif(5, 0, 10),0),
"Satisfaction3" = round(runif(5, 0, 10),0),
"Satisfaction4" = round(runif(5, 0, 10),0)),
row.names = c("Min", "Max", "EU_median", "Hungary_median", "Survey_Participant"))
dummy_data[1,] <- 0
dummy_data[2,] <- 10}
View(dummy_data)
View(dummy_data)
dummy_data["EU_median"]
dummy_data[EU_median]
dummy_data[EU_median,]
dummy_data["EU_median",]
View(dummy_data)
{dummy_data <- data.frame(list("ppltrst" = round(runif(5, 0, 10),0),
"pplfair" = round(runif(5, 0, 10),0),
"pplhlp" = round(runif(5, 0, 10),0),
"trstprl" = round(runif(5, 0, 10),0),
"trstep" = round(runif(5, 0, 10),0),
"trstlgl" = round(runif(5, 0, 10),0),
"imbgeco" = round(runif(5, 0, 10),0),
"imueclt" = round(runif(5, 0, 10),0),
"imwbcnt" = round(runif(5, 0, 10),0),
"impcntr" = round(runif(5, 0, 10),0),
"imsmetn" = round(runif(5, 0, 10),0),
"imdfetn" = round(runif(5, 0, 10),0),),
row.names = c("Min", "Max", "EU_median", "Hungary_median", "Survey_Participant"))
dummy_data[1,] <- 0
dummy_data[2,] <- 10}
{dummy_data <- data.frame(list("ppltrst" = round(runif(5, 0, 10),0),
"pplfair" = round(runif(5, 0, 10),0),
"pplhlp" = round(runif(5, 0, 10),0),
"trstprl" = round(runif(5, 0, 10),0),
"trstep" = round(runif(5, 0, 10),0),
"trstlgl" = round(runif(5, 0, 10),0),
"imbgeco" = round(runif(5, 0, 10),0),
"imueclt" = round(runif(5, 0, 10),0),
"imwbcnt" = round(runif(5, 0, 10),0),
"impcntr" = round(runif(5, 0, 10),0),
"imsmetn" = round(runif(5, 0, 10),0),
"imdfetn" = round(runif(5, 0, 10),0),
"happy" = round(runif(5, 0, 10),0),
"stflife" = round(runif(5, 0, 10),0),
"frprtpl" = round(runif(5, 0, 10),0),
"stfdem" = round(runif(5, 0, 10),0),
"stfeco" = round(runif(5, 0, 10),0),
"stfedu" = round(runif(5, 0, 10),0),
"stfhlth" = round(runif(5, 0, 10),0)),
row.names = c("Min", "Max", "EU_median", "Hungary_median", "Survey_Participant"))
dummy_data[1,] <- 0
dummy_data[2,] <- 10}
View(dummy_data)
runApp()
?box()
runApp()
View(ess_data)
data <- data.frame(list(agea, gndr, cntry, eisced, dweight,
ppltrst, pplfair, pplhlp,
trstprl, trstep, trstlgl,
imbgeco, imueclt, imwbcnt,
impcntr,
imsmetn, imdfetn,
happy, stflife,
frprtpl, stfdem,
stfeco, stfedu, stfhlth,
lrscale
))
data <- data.frame(list("agea", "gndr", "cntry", "eisced", "dweight",
"ppltrst", "pplfair", "pplhlp",
"trstprl", "trstep", "trstlgl",
"imbgeco", "imueclt", "imwbcnt",
"impcntr",
"imsmetn", "imdfetn",
"happy", "stflife",
"frprtpl", "stfdem",
"stfeco", "stfedu", "stfhlth",
"lrscale"
))
View(data)
